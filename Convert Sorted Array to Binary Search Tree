class Solution {
private:
    TreeNode* ans;
public:
    TreeNode* sortedArrayToBST(vector<int>& nums) {
        ans = dfs(nums, 0, nums.size() - 1);
        return ans;
    }
    
    TreeNode* dfs(vector<int> & nums, int startIndex, int endIndex){
        
        if (startIndex<= endIndex){
            int  mid = startIndex + (endIndex - startIndex) / 2;
            TreeNode* newNode = new TreeNode(nums[mid]);
            newNode->left = dfs(nums, startIndex, mid - 1);
            newNode->right = dfs(nums, mid + 1, endIndex);
            return newNode;
        }
        else{
            return NULL;
        }
        
        
    }
};
